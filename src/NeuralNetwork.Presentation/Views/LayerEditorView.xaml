<UserControl x:Class="NeuralNetwork.Presentation.Views.LayerEditorView"
             xmlns="http://schemas.microsoft.com/winfx/2006/xaml/presentation"
             xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml"
             xmlns:mc="http://schemas.openxmlformats.org/markup-compatibility/2006" 
             xmlns:d="http://schemas.microsoft.com/expression/blend/2008"
             xmlns:prism="http://prismlibrary.com/"
             xmlns:System="clr-namespace:System;assembly=System.Runtime"
             xmlns:domain="clr-namespace:Common.Domain;assembly=Common.Domain"
             xmlns:mah="http://metro.mahapps.com/winfx/xaml/controls"
             xmlns:matrixPreview="clr-namespace:SharedUI.MatrixPreview;assembly=SharedUI"
             xmlns:designData="clr-namespace:NeuralNetwork.Presentation.__DesignData"
             xmlns:domain11="clr-namespace:NeuralNetwork.Domain;assembly=NeuralNetwork.Domain"
             d:DesignHeight="450" d:DesignWidth="900"
             prism:ViewModelLocator.AutoWireViewModel="True"
             Focusable="True"
             mc:Ignorable="d" 
             d:DataContext="{d:DesignInstance designData:DesignLayerEditorVm, IsDesignTimeCreatable=True}">
    <UserControl.Resources>
        <ObjectDataProvider x:Key="activationFunctions" MethodName="GetValues"
                            ObjectType="{x:Type System:Enum}">
            <ObjectDataProvider.MethodParameters>
                <x:Type TypeName="domain11:ActivationFunctionName" />
            </ObjectDataProvider.MethodParameters>
        </ObjectDataProvider>
        <Style x:Key="Title" TargetType="TextBlock">
            <Setter Property="Margin" Value="0,10,0,12" />
        </Style>
        <BooleanToVisibilityConverter x:Key="BoolToVis"/>
    </UserControl.Resources>
    <UserControl.InputBindings>
        <KeyBinding Key="Esc" Command="{Binding Controller.ExitCommand}" />
    </UserControl.InputBindings>

    <Grid Margin="20,20,20,15">
        <Grid.ColumnDefinitions>
            <ColumnDefinition />
            <ColumnDefinition />
        </Grid.ColumnDefinitions>
        <Grid.RowDefinitions>
            <RowDefinition Height="Auto" />
            <RowDefinition Height="Auto" />
            <RowDefinition Height="*"/>
        </Grid.RowDefinitions>
        <UniformGrid Grid.Row="0" Grid.ColumnSpan="2" Columns="2" Margin="0,0,0,12">
            <TextBlock Text="Neurons" HorizontalAlignment="Left" VerticalAlignment="Center"
                       Style="{StaticResource Title}" />
            <mah:NumericUpDown Grid.Row="0" Grid.Column="1" Minimum="1" HorizontalAlignment="Stretch" MinWidth="120"
                               Value="{Binding Path=Layer.NeuronsCount, Mode=TwoWay, UpdateSourceTrigger=PropertyChanged}"
                               VerticalAlignment="Center" Height="26" />
            <TextBlock Text="Activation function" HorizontalAlignment="Left" Style="{StaticResource Title}"
                       VerticalAlignment="Center" />
            <ComboBox Name="Activation" ItemsSource="{Binding Source={StaticResource activationFunctions}}"
                      SelectedValue="{Binding Path=Layer.ActivationFunction, Mode=TwoWay, UpdateSourceTrigger=PropertyChanged}"
                      HorizontalAlignment="Stretch" VerticalAlignment="Center" Height="26" />
            <TextBlock Text="Inputs count" HorizontalAlignment="Left" VerticalAlignment="Center"
                       Style="{StaticResource Title}" />
            <mah:NumericUpDown IsEnabled="{Binding Path=Layer.ShowInputsCount}"
                               Minimum="1" HorizontalAlignment="Stretch" MinWidth="120"
                               Value="{Binding Path=Layer.InputsCount, Mode=TwoWay, UpdateSourceTrigger=PropertyChanged}"
                               VerticalAlignment="Center" Height="26" />


            <TextBlock Text="Parameters initialization method" HorizontalAlignment="Left"
                       Style="{StaticResource Title}"
                       VerticalAlignment="Center" />
            <UniformGrid Columns="2" Margin="0,10,0,0">
                <ComboBox MaxHeight="{Binding ElementName=Activation,Path=Height}"
                          ItemsSource="{Binding Layer.WeightsInitMethods}" 
                          SelectedValue="{Binding Path=Layer.WeightsInitMethod}">
                    <ComboBox.ItemContainerStyle>
                        <Style TargetType="ComboBoxItem" BasedOn="{StaticResource MahApps.Styles.ComboBoxItem}">
                            <Style.Triggers>
                                <DataTrigger Binding="{Binding}" Value="{x:Static domain11:WeightsInitMethod.SqrMUniform}">
                                    <Setter Property="Control.ToolTip" Value="Sets weights using values from uniform distribution with standard deviation = sqrt(inputsCount)."/>
                                </DataTrigger>
                                <DataTrigger Binding="{Binding}" Value="{x:Static domain11:WeightsInitMethod.SmallNumbers}">
                                    <Setter Property="Control.ToolTip" Value="Uniform distribution. Values range from -1/sqrt(inputsCount) to 1/sqrt(inputsCount). Bias = 0"/>
                                </DataTrigger>
                                <DataTrigger Binding="{Binding}" Value="{x:Static domain11:WeightsInitMethod.SmallStdDev}">
                                    <Setter Property="Control.ToolTip" Value="Normal distribution with standard deviation = 0.01 and mean = 0. Bias = 0"/>
                                </DataTrigger>
                                <DataTrigger Binding="{Binding}" Value="{x:Static domain11:WeightsInitMethod.NormalDist}">
                                    <Setter Property="Control.ToolTip" Value="Normal distribution."/>
                                </DataTrigger>
                            </Style.Triggers>
                        </Style>
                    </ComboBox.ItemContainerStyle>
                </ComboBox>
                <Button Margin="10,0,0,0" HorizontalAlignment="Right" MaxHeight="40"
                        Command="{Binding Controller.InitializeWeightsCommand}">
                    Initialize parameters
                </Button>
            </UniformGrid>

        </UniformGrid>
        <StackPanel Grid.Row="1" Grid.Column="0" Grid.ColumnSpan="2" Orientation="Vertical">
            <Grid>
                <Grid.Style>
                    <Style TargetType="Grid">
                        <Style.Triggers>
                            <DataTrigger Binding="{Binding Layer.WeightsInitMethod}" Value="{x:Static domain11:WeightsInitMethod.NormalDist}">
                                <Setter Property="Visibility" Value="Visible"/>
                            </DataTrigger>
                        </Style.Triggers>
                        <Style.Setters>
                            <Setter Property="Visibility" Value="Collapsed"/>
                        </Style.Setters>
                    </Style>
                </Grid.Style>
                <Grid.RowDefinitions>
                    <RowDefinition Height="Auto"/>
                    <RowDefinition Height="Auto"/>
                </Grid.RowDefinitions>
                <Grid.ColumnDefinitions>
                    <ColumnDefinition/>
                    <ColumnDefinition/>
                </Grid.ColumnDefinitions>
                <TextBlock Grid.Row="0" Grid.Column="1" TextAlignment="Center" Text="Normal distribution parameters" Style="{StaticResource Title}"/>
                <UniformGrid Grid.Row="1" Grid.Column="1" Columns="2">
                    <TextBlock Text="Weights mean" HorizontalAlignment="Left" Style="{StaticResource Title}"/>
                    <TextBox Height="26" Text="{Binding Layer.NormDistOptions.WMean}"/>
                    <TextBlock Text="Weights standard deviation" HorizontalAlignment="Left" Style="{StaticResource Title}"/>
                    <TextBox Height="26" Text="{Binding Layer.NormDistOptions.WStdDev}"/>
                    <TextBlock Text="Biases mean" HorizontalAlignment="Left" Style="{StaticResource Title}"/>
                    <TextBox Height="26" Text="{Binding Layer.NormDistOptions.BMean}"/>
                    <TextBlock Text="Biases standard deviation" HorizontalAlignment="Left" Style="{StaticResource Title}"/>
                    <TextBox Height="26" Text="{Binding Layer.NormDistOptions.BStdDev}"/>
                </UniformGrid>

            </Grid>
        </StackPanel>
        <StackPanel Grid.Row="2" Grid.Column="0" Grid.ColumnSpan="2" VerticalAlignment="Center" Margin="0,42,0,0">
            <ToggleButton Name="MatrixViewToggle" IsChecked="False" MaxWidth="100">
                <ToggleButton.Style>
                    <Style TargetType="ToggleButton">
                        <Style.Triggers>
                            <DataTrigger Binding="{Binding Visibility,ElementName=MatrixView}"
                                         Value="Visible">
                                <Setter Property="Content" Value="Hide matrix"></Setter>
                            </DataTrigger>
                            <DataTrigger Binding="{Binding Visibility,ElementName=MatrixView}"
                                         Value="Collapsed">
                                <Setter Property="Content" Value="Show matrix"></Setter>
                            </DataTrigger>
                        </Style.Triggers>
                    </Style>
                </ToggleButton.Style>

            </ToggleButton>

                <matrixPreview:MatrixPreviewView Editable="True" MaxHeight="600" Name="MatrixView" Visibility="{Binding IsChecked,ElementName=MatrixViewToggle, Converter={StaticResource BoolToVis}}"
                                                 LayerSelectPanelVisibility="Collapsed" DataContext="{Binding MatrixPreview}" />
        </StackPanel>

    </Grid>
</UserControl>
