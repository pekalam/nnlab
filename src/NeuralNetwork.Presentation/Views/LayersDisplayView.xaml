<UserControl x:Class="NeuralNetwork.Presentation.Views.LayersDisplayView"
             xmlns="http://schemas.microsoft.com/winfx/2006/xaml/presentation"
             xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml"
             xmlns:mc="http://schemas.openxmlformats.org/markup-compatibility/2006" 
             xmlns:d="http://schemas.microsoft.com/expression/blend/2008"
             xmlns:prism="http://prismlibrary.com/"
             xmlns:mah="http://metro.mahapps.com/winfx/xaml/controls"
             xmlns:iconPacks="http://metro.mahapps.com/winfx/xaml/iconpacks"
             xmlns:i="http://schemas.microsoft.com/expression/2010/interactivity"
             xmlns:dd="clr-namespace:NeuralNetwork.Presentation.__DesignData"
             mc:Ignorable="d" 
             d:DesignHeight="450" d:DesignWidth="800"
             prism:ViewModelLocator.AutoWireViewModel="True"
             d:DataContext="{d:DesignInstance dd:DesignLayersDisplayVm, IsDesignTimeCreatable=True}">
    <UserControl.Resources>
        <Style x:Key="LayerListBoxContainerStyle" TargetType="{x:Type ListBoxItem}">
            <Setter Property="Template">
                <Setter.Value>
                    <ControlTemplate TargetType="ListBoxItem">
                        <StackPanel Orientation="Horizontal" HorizontalAlignment="Center" VerticalAlignment="Center">

                            <ContentPresenter Name="ContentPres" VerticalAlignment="Center"
                                              HorizontalAlignment="Center" />
                            <Canvas Width="0">
                                <Canvas.Style>
                                    <Style TargetType="Canvas">
                                        <Style.Triggers>
                                            
                                            <MultiDataTrigger>
                                                <MultiDataTrigger.Conditions>
                                                    <Condition Binding="{Binding IsInputLayer}" Value="False"/>
                                                    <Condition Binding="{Binding IsAddLayerItem}" Value="False"/>
                                                </MultiDataTrigger.Conditions>
                                                <Setter Property="Visibility" Value="Visible"/>
                                            </MultiDataTrigger>
                                            <DataTrigger Binding="{Binding IsInputLayer}" Value="True">
                                                <Setter Property="Visibility" Value="Collapsed"/>
                                            </DataTrigger>
                                            <DataTrigger Binding="{Binding IsAddLayerItem}" Value="True">
                                                <Setter Property="Visibility" Value="Collapsed"/>
                                            </DataTrigger>
                                        </Style.Triggers>
                                    </Style>
                                </Canvas.Style>
                                <Ellipse Fill="#F2F2F2" Canvas.Left="-128" Canvas.Top="90" Width="15" Height="15">
                                    <Ellipse.Effect>
                                        <DropShadowEffect ShadowDepth="0" BlurRadius="5" RenderingBias="Performance"
                                                          Color="Black" />
                                    </Ellipse.Effect>
                                </Ellipse>
                            </Canvas>
                            <Canvas Width="100">
                                <Canvas.Style>
                                    <Style TargetType="Canvas">
                                        <Setter Property="Visibility" Value="Collapsed"/>
                                        <Style.Triggers>
                                            <DataTrigger Binding="{Binding IsAddLayerItem}" Value="False">
                                                <Setter Property="Visibility" Value="Visible"/>
                                            </DataTrigger>
                                        </Style.Triggers>
                                    </Style>
                                </Canvas.Style>
                                <Rectangle Canvas.Top="95" Width="100" Height="5" Fill="#C9C9C9"
                                           VerticalAlignment="Stretch" />
                                <Ellipse Fill="#F2F2F2" Canvas.Left="-8" Canvas.Top="90" Width="15" Height="15">
                                    <Ellipse.Effect>
                                        <DropShadowEffect ShadowDepth="0" BlurRadius="5" RenderingBias="Performance"
                                                          Color="Black" />
                                    </Ellipse.Effect>
                                </Ellipse>

                            </Canvas>
                        </StackPanel>
                        <!-- <ControlTemplate.Triggers> -->
                        <!--     <Trigger Property="IsSelected" Value="True"> -->
                        <!--         <Setter TargetName="SelectedOverlay" Property="Visibility" Value="Visible" /> -->
                        <!--         <Setter TargetName="ContentPres" Property="TextBlock.Foreground" Value="White" /> -->
                        <!--     </Trigger> -->
                        <!--     <Trigger Property="IsSelected" Value="False"> -->
                        <!--         <Setter TargetName="SelectedOverlay" Property="Visibility" Value="Collapsed" /> -->
                        <!--     </Trigger> -->
                        <!-- </ControlTemplate.Triggers> -->
                    </ControlTemplate>

                </Setter.Value>
            </Setter>
        </Style>
        <Style x:Key="EditorPanelStyle">
            <Style.Resources>
                <Style TargetType="{x:Type Button}">
                    <Setter Property="Foreground" Value="#FFDEDEDE"/>
                    <Setter Property="BorderBrush" Value="#FF999999"/>
                    <Setter Property="Margin" Value="0,0,0,3"/>
                    <Setter Property="FontSize" Value="13"/>
                    <Setter Property="Template">
                        <Setter.Value>
                            <ControlTemplate TargetType="{x:Type Button}">
                                <Border Background="{TemplateBinding Background}" Padding="3" BorderBrush="#FF999999" BorderThickness="0,0,0,1">
                                    <ContentPresenter HorizontalAlignment="Center" VerticalAlignment="Center"/>
                                </Border>
                            </ControlTemplate>
                        </Setter.Value>
                    </Setter>
                    <Style.Triggers>
                        <Trigger Property="IsMouseOver" Value="True">
                            <Setter Property="Background" Value="#FF999999"/>
                        </Trigger>
                        <Trigger Property="IsMouseOver" Value="False">
                            <Setter Property="Background" Value="Transparent"/>

                        </Trigger>
                    </Style.Triggers>
                </Style>
                <Style TargetType="{x:Type mah:DropDownButton}">
                    <Setter Property="Foreground" Value="#FFDEDEDE"/>
                    <Setter Property="BorderBrush" Value="#FF999999"/>
                    <Setter Property="BorderThickness" Value="0,0,0,1"/>
                    <Setter Property="Margin" Value="0"/>
                    <Setter Property="FontSize" Value="13"/>
                    <Setter Property="mah:ControlsHelper.CornerRadius" Value="0"/>
                    <Setter Property="ButtonStyle">
                        <Setter.Value>
                            <Style TargetType="{x:Type Button}">
                                <Setter Property="BorderBrush" Value="#FF999999"/>
                                <Setter Property="FontSize" Value="13"/>
                                <Setter Property="Background" Value="Transparent"/>
                                <Setter Property="Template">
                                    <Setter.Value>
                                        <ControlTemplate TargetType="{x:Type Button}">
                                            <Border>
                                                <ContentPresenter HorizontalAlignment="Center" VerticalAlignment="Center"/>
                                                <Border.Style>
                                                    <Style TargetType="{x:Type Border}">
                                                        <Style.Triggers>
                                                            <Trigger Property="IsMouseOver" Value="True">
                                                                <Setter Property="Background" Value="#FF999999"/>
                                                            </Trigger>
                                                            <Trigger Property="IsMouseOver" Value="False">
                                                                <Setter Property="Background" Value="Transparent"/>
                                                            </Trigger>
                                                        </Style.Triggers>
                                                    </Style>
                                                </Border.Style>
                                            </Border>
                                        </ControlTemplate>
                                    </Setter.Value>
                                </Setter>
                            </Style>
                        </Setter.Value>
                    </Setter>
                </Style>
            </Style.Resources>
        </Style>
    </UserControl.Resources>
    <Grid>
        <ListBox Margin="20,0,20,0" ItemContainerStyle="{StaticResource ResourceKey=LayerListBoxContainerStyle}" x:Name="listBox"
                 ScrollViewer.HorizontalScrollBarVisibility="Auto" ScrollViewer.CanContentScroll="False"
                 ScrollViewer.VerticalScrollBarVisibility="Disabled" ItemsSource="{Binding Layers}"
                 SelectedItem="{Binding SelectedLayer, Mode=TwoWay}">
            <ListBox.ItemsPanel>
                <ItemsPanelTemplate>
                    <VirtualizingStackPanel IsItemsHost="True" Orientation="Horizontal" HorizontalAlignment="Center" />
                </ItemsPanelTemplate>
            </ListBox.ItemsPanel>

            <ListBox.ItemTemplate>
                <DataTemplate>
                    <Button Name="Btn" Click="Btn_Click" Tag="{Binding}" Cursor="Hand" BorderThickness="0"
                            Background="{x:Null}" BorderBrush="{x:Null}" Padding="0" Foreground="White" FontSize="14">
                        <Grid>
                            <Border x:Name="Shadow" BorderThickness="1" BorderBrush="#A514202B"
                                    CornerRadius="4">
                                <Border.Effect>
                                    <DropShadowEffect ShadowDepth="0" BlurRadius="5" RenderingBias="Performance"
                                                      Color="#C0C0C0" />
                                </Border.Effect>
                                <Border.Style>
                                    <Style TargetType="Border">
                                        <Style.Triggers>
                                            <DataTrigger Binding="{Binding IsMouseOver, ElementName=Btn}" Value="True">
                                                <Setter Property="Background" Value="#A5657D93" />
                                            </DataTrigger>
                                            <DataTrigger Binding="{Binding IsMouseOver, ElementName=Btn}" Value="False">
                                                <Setter Property="Background" Value="#094680" />
                                            </DataTrigger>
                                        </Style.Triggers>
                                    </Style>
                                </Border.Style>

                            </Border>


                            <Border Margin="1" Name="ItemContainer" CornerRadius="4">

                                <Grid MinWidth="120" Height="200"
                                            Margin="0,0,0,0" Width="Auto">
                                    <StackPanel Name="LayerItemContainer">
                                        <TextBlock Text="{Binding Path=LayerText}"
                                                   TextAlignment="Center" />
                                        <TextBlock Text="{Binding Path=LayerSecondText}"
                                                   TextAlignment="Center" />

                                    </StackPanel>
                                    <StackPanel x:Name="EditPanel" VerticalAlignment="Center" Style="{StaticResource ResourceKey=EditorPanelStyle}">
                                        <mah:DropDownButton
                                            ArrowVisibility="Collapsed" Content="Insert" ItemsSource="{Binding InsertModesList}">
                                        </mah:DropDownButton>
                                        <Button x:Name="EditBtn" Command="{Binding Path=EditLayer}" CommandParameter="{Binding}">Edit</Button>
                                        <Button Command="{Binding Path=RemoveLayer}" CommandParameter="{Binding}">Remove</Button>
                                    </StackPanel>
                                    <Grid Visibility="Collapsed" Name="AddLayerItemContainer"
                                          HorizontalAlignment="Center" VerticalAlignment="Stretch">
                                        <Button Name="AddBtn" Command="{Binding Path=AddLayer}"
                                                HorizontalAlignment="Center"
                                                VerticalAlignment="Center" Height="200" Width="120" Background="Transparent"
                                                BorderBrush="{x:Null}" Foreground="White">
                                            <iconPacks:FontAwesome Kind="PlusSquareRegular" Width="50" Height="50"/>
                                        </Button>
                                    </Grid>
                                </Grid>

                            </Border>
                        </Grid>
                    </Button>
                    <DataTemplate.Triggers>
                        <DataTrigger
                            Binding="{Binding RelativeSource={RelativeSource Mode=FindAncestor, AncestorType={x:Type ListBoxItem}}, Path=IsSelected}"
                            Value="True">
                            <Setter TargetName="Shadow" Property="Background" Value="#A5657D93" />
                            <Setter TargetName="EditPanel" Property="Visibility" Value="Visible" />
                        </DataTrigger>
                        <DataTrigger
                            Binding="{Binding RelativeSource={RelativeSource Mode=FindAncestor, AncestorType={x:Type ListBoxItem}}, Path=IsSelected}"
                            Value="False">
                            <Setter TargetName="EditPanel" Property="Visibility" Value="Collapsed" />
                        </DataTrigger>
                        <DataTrigger Binding="{Binding Path=IsAddLayerItem}" Value="True">
                            <Setter TargetName="AddLayerItemContainer" Property="Visibility" Value="Visible" />
                            <Setter TargetName="EditPanel" Property="Visibility" Value="Collapsed" />
                            <Setter TargetName="LayerItemContainer" Property="Visibility" Value="Collapsed" />
                            <Setter TargetName="Shadow" Property="BorderBrush" Value="#C0AEAEAE" />
                        </DataTrigger>

                        <!-- <DataTrigger Binding="{Binding Path=IsInputLayer}" Value="True"> -->
                        <!--     <Setter TargetName="ItemContainer" Property="Background" Value="#A514202B" /> -->
                        <!-- </DataTrigger> -->
                        <!-- <DataTrigger Binding="{Binding Path=IsOutputLayer}" Value="True"> -->
                        <!--     <Setter TargetName="ItemContainer" Property="Background" Value="#A514202B" /> -->
                        <!-- </DataTrigger> -->
                    </DataTemplate.Triggers>
                </DataTemplate>

            </ListBox.ItemTemplate>
            <i:Interaction.Triggers>
                <i:EventTrigger EventName="SelectionChanged">
                    <i:InvokeCommandAction Command="{Binding Service.LayerClickedCommand}"
                                           CommandParameter="{Binding SelectedValue, ElementName=listBox}" />
                </i:EventTrigger>
            </i:Interaction.Triggers>
        </ListBox>
    </Grid>
</UserControl>
