# .NET Desktop
# Build and run tests for .NET Desktop or Windows classic desktop solutions.
# Add steps that publish symbols, save build artifacts, and more:
# https://docs.microsoft.com/azure/devops/pipelines/apps/windows/dot-net

trigger:
- master
- beta

pool:
  vmImage: 'windows-latest'

variables:
  DOTNET_SKIP_FIRST_TIME_EXPERIENCE: true
  buildPlatform: 'Any CPU'
  buildConfiguration: 'Release'
  bin64FolderName: 'bin64'
  bin86FolderName: 'bin86'
  release64FolderName: 'x64Release'
  release86FolderName: 'x86Release'
  isMaster: $[eq(variables['Build.SourceBranch'], 'refs/heads/master')]

steps:
- task: UseDotNet@2
  displayName: 'Use .NET Core sdk 3.1'
  inputs:
    packageType: 'sdk'
    version: '3.1.301'
- task: DotNetCoreCLI@2
  displayName: 'Restore packages'
  inputs:
    command: 'restore'
    projects: 'src\**\*.csproj'
    restoreArguments: '--source https://www.myget.org/F/oxyplot/api/v3/index.json --source https://api.nuget.org/v3/index.json'
    feedsToUse: 'select'
- task: VSBuild@1
  displayName: 'Build solution'
  inputs:
    solution: 'src\NNLab.Dev.sln'
    vsVersion: '16.0'      
- task: DotNetCoreCLI@2
  displayName: 'Run dotnet publish win-x64'
  inputs:
    command: 'publish'
    publishWebProjects: false
    projects: 'src\Assembler\*.csproj'
    arguments: '-c Release -r win-x64 -o ${{ variables.release64FolderName }}\${{ variables.bin64FolderName }}'
    zipAfterPublish: false
    modifyOutputPath: false
- task: DotNetCoreCLI@2
  displayName: 'Run dotnet publish win-x86'
  inputs:
    command: 'publish'
    publishWebProjects: false
    projects: 'src\Assembler\*.csproj'
    arguments: '-c Release -r win-x86 -o ${{ variables.release86FolderName }}\${{ variables.bin86FolderName }}'
    zipAfterPublish: false
    modifyOutputPath: false
- task: CmdLine@2
  inputs:
    script: |
      ren ${{ variables.release64FolderName }}\${{ variables.bin64FolderName }}\Assembler.exe NNLab.exe
      ren ${{ variables.release86FolderName }}\${{ variables.bin86FolderName }}\Assembler.exe NNLab.exe
- task: ArchiveFiles@2
  inputs:
    rootFolderOrFile: '$(System.DefaultWorkingDirectory)\${{ variables.release64FolderName }}'
    includeRootFolder: false
    archiveType: 'zip'
    archiveFile: '$(Build.ArtifactStagingDirectory)/x64AppRelease.zip'
    replaceExistingArchive: true
- task: ArchiveFiles@2
  inputs:
    rootFolderOrFile: '$(System.DefaultWorkingDirectory)\${{ variables.release86FolderName }}'
    includeRootFolder: false
    archiveType: 'zip'
    archiveFile: '$(Build.ArtifactStagingDirectory)/x86AppRelease.zip'
    replaceExistingArchive: true
- task: PublishBuildArtifacts@1
  displayName: 'Publish x64 build artifacts'
  inputs:
    PathtoPublish: '$(Build.ArtifactStagingDirectory)/x64AppRelease.zip'
    ArtifactName: 'x64AppRelease'
    publishLocation: 'Container'
- task: PublishBuildArtifacts@1
  displayName: 'Publish x86 build artifacts'  
  inputs:
    PathtoPublish: '$(Build.ArtifactStagingDirectory)/x86AppRelease.zip'
    ArtifactName: 'x86AppRelease'
    publishLocation: 'Container'
- task: GitHubRelease@1
  condition: eq(variables.isMaster, 'true')
  inputs:
    gitHubConnection: 'github.com_pekalam'
    repositoryName: 'pekalam/nnlab'
    action: 'create'
    target: '$(Build.SourceVersion)'
    tagSource: 'gitTag'
    assets: '$(Build.ArtifactStagingDirectory)/*.zip'
    addChangeLog: false