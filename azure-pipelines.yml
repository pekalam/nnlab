# .NET Desktop
# Build and run tests for .NET Desktop or Windows classic desktop solutions.
# Add steps that publish symbols, save build artifacts, and more:
# https://docs.microsoft.com/azure/devops/pipelines/apps/windows/dot-net

trigger:
- master
- beta

pool:
  vmImage: 'windows-latest'

variables:
  DOTNET_SKIP_FIRST_TIME_EXPERIENCE: true
  buildPlatform: 'Any CPU'
  buildConfiguration: 'Release'

steps:
- task: UseDotNet@2
  displayName: 'Use .NET Core sdk 3.1'
  inputs:
    packageType: 'sdk'
    version: '3.1.301'
- task: DotNetCoreCLI@2
  displayName: 'Restore packages'
  inputs:
    command: 'restore'
    projects: 'src\**\*.csproj'
    restoreArguments: '--source https://www.myget.org/F/oxyplot/api/v3/index.json --source https://api.nuget.org/v3/index.json'
    feedsToUse: 'select'
- task: VSBuild@1
  displayName: 'Build solution'
  inputs:
    solution: 'src\NNLab.sln'
    vsVersion: '16.0'      
- task: DotNetCoreCLI@2
  displayName: 'Run dotnet publish win-x64'
  inputs:
    command: 'publish'
    publishWebProjects: false
    projects: 'src\NNLab\*.csproj'
    arguments: '-c Release -r win-x64 -o x64AppRelease -p:PublishSingleFile=true'
- task: DotNetCoreCLI@2
  displayName: 'Run dotnet publish win-x86'
  inputs:
    command: 'publish'
    publishWebProjects: false
    projects: 'src\NNLab\*.csproj'
    arguments: '-c Release -r win-x86 -o x86AppRelease -p:PublishSingleFile=true'
- task: CmdLine@2
  inputs:
    script: |
      cd .\src\NNLab\x64AppRelease\
      ren .\Assembler.exe NNLab.exe
      cd ..\x86AppRelease
      ren .\Assembler.exe NNLab.exe
- task: PublishBuildArtifacts@1
  displayName: 'Publish x64 build artifacts'
  inputs:
    PathtoPublish: '$(System.DefaultWorkingDirectory)\x64AppRelease'
    ArtifactName: 'x64AppRelease'
    publishLocation: 'Container'
- task: PublishBuildArtifacts@1
  displayName: 'Publish x86 build artifacts'  
  inputs:
    PathtoPublish: '$(System.DefaultWorkingDirectory)\x86AppRelease'
    ArtifactName: 'x86AppRelease'
    publishLocation: 'Container'
